@using ASP01.Models
@model ASP01.Models.ViewModels.OrderEditView

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}
<button class="btn btn-sm btn-primary pull-right" onclick="addPosition();">Add position</button>
<div>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Positions[0].Position)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Positions[0].ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Positions[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Positions[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
        </tr>

        @foreach (var item in Model.Positions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
            </tr>
        }

    </table>
</div>

<div id="modalDiv">

</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function addPosition() {
        $.get( '@Url.Action("CreateModal","OrderPositions", new {orderId = Model.OrderId})', function(data) {
            $('#modalDiv').html(data);
            $('#createModal').modal('show');
        });
    }
</script>